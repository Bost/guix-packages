From 6346ce0caeec666c68bf9140c62339b309dff2e3 Mon Sep 17 00:00:00 2001
From: Rostislav Svoboda <Rostislav.Svoboda@gmail.com>
Date: Sat, 2 Jul 2022 19:21:28 +0200
Subject: [PATCH] Add data dir

Spacemacs uses ~/.emacs.d in 2 ways: to store the code implementing the
spacemacs framework and to track state. When we tell spacemacs that it lives
in the store it tries to use the store location to track state as well. This
patch adds a new variable, spacemacs-data-directory, for keeping track of state.
This defaults to spacemacs-start-directory for upstream compatibility.
---
 CHANGELOG.org                                |  2 +-
 core/core-configuration-layer.el             |  2 +-
 core/core-documentation.el                   |  2 +-
 core/core-funcs.el                           |  4 +--
 core/core-load-paths.el                      | 16 +++++++--
 core/core-release-management.el              |  4 +++
 core/libs/quelpa.el                          |  2 +-
 doc/QUICK_START.org                          |  2 +-
 tests/core/core-configuration-layer-utest.el | 38 ++++++++++----------
 tests/doc/org-export-ftest.el                |  2 +-
 10 files changed, 45 insertions(+), 29 deletions(-)

diff --git a/CHANGELOG.org b/CHANGELOG.org
index 24019e5..e4efe38 100644
--- a/CHANGELOG.org
+++ b/CHANGELOG.org
@@ -3367,7 +3367,7 @@ Improve loading robustness:
 - Add an error message when the minimal Emacs version is not met
   (thanks Immortalin)
 - Add =spacemacs/recompile-elpa= interactive function (thanks to justbur)
-- Add =user-emacs-directory= in =async-start= (thanks to brabalan)
+- Add =spacemacs-data-directory= in =async-start= (thanks to brabalan)
 - Set =ad-redefinition-action= to =accept=
 - Enable distinction between ~C-i~ and ~TAB~ (thanks to justbur)
 - Move =evilified-state= library to local package of =spacemacs= layer
diff --git a/core/core-configuration-layer.el b/core/core-configuration-layer.el
index b8f4101..e37d609 100644
--- a/core/core-configuration-layer.el
+++ b/core/core-configuration-layer.el
@@ -135,7 +135,7 @@ subdirectory of ROOT is used."
   "Hook executed at the end of configuration loading.")
 
 (defconst configuration-layer--elpa-root-directory
-  (concat spacemacs-start-directory "elpa/")
+  (concat spacemacs-data-directory "elpa/")
   "Spacemacs ELPA root directory.")
 
 (defconst configuration-layer--rollback-root-directory
diff --git a/core/core-documentation.el b/core/core-documentation.el
index 7144c05..f75e38f 100644
--- a/core/core-documentation.el
+++ b/core/core-documentation.el
@@ -319,7 +319,7 @@ preprocessors for the exported .org files."
               });
           });
           </script>")
-         (publish-target (concat spacemacs-start-directory "export/"))
+         (publish-target (concat spacemacs-data-directory "export/"))
          (org-html-htmlize-output-type 'css)
          (org-publish-project-alist
           `(("spacemacs"
diff --git a/core/core-funcs.el b/core/core-funcs.el
index ef9f3f7..f05379d 100644
--- a/core/core-funcs.el
+++ b/core/core-funcs.el
@@ -284,7 +284,7 @@ If ARG is non-nil, force recompile of all found `.el' files.
 If DIR is non-nil, use a given directory for recompilation instead of elpa."
   (interactive "P")
   ;; Replace default directories if dir parameter is filled
-  (let ((user-emacs-dir (or dir user-emacs-directory))
+  (let ((user-emacs-dir (or dir spacemacs-data-directory))
         (package-user-dir (or dir package-user-dir)))
     ;; First argument must be 0 (not nil) to get missing .elc files rebuilt.
     ;; Bonus: Optionally force recompilation with universal ARG
@@ -293,7 +293,7 @@ If DIR is non-nil, use a given directory for recompilation instead of elpa."
        (lambda (fname)
          (when (file-exists-p fname)
            (delete-file fname)))
-       (directory-files-recursively user-emacs-directory "\\.elc$" t)))
+       (directory-files-recursively spacemacs-data-directory "\\.elc$" t)))
     (byte-recompile-directory package-user-dir 0 arg)))
 
 (defun spacemacs/register-repl (feature repl-func &optional tag)
diff --git a/core/core-load-paths.el b/core/core-load-paths.el
index 926c676..3134536 100644
--- a/core/core-load-paths.el
+++ b/core/core-load-paths.el
@@ -34,9 +34,21 @@
 
 ;; ~/.emacs.d
 (defvar spacemacs-start-directory
-  (expand-file-name user-emacs-directory)
+  (expand-file-name spacemacs-data-directory)
   "Spacemacs start directory.")
 
+(defvar spacemacs-data-directory
+  user-emacs-directory
+  "Writable directory for spacemacs data")
+(unless (file-exists-p spacemacs-data-directory)
+  (make-directory spacemacs-data-directory))
+
+(defvar spacemacs-data-directory
+  spacemacs-data-directory
+  "Writable directory for spacemacs data")
+(unless (file-exists-p spacemacs-data-directory)
+  (make-directory spacemacs-data-directory))
+
 ;; ~/.emacs.d/assets
 (defconst spacemacs-assets-directory
   (concat spacemacs-start-directory "assets/")
@@ -96,7 +108,7 @@
 
 ;; ~/.emacs.d/.cache
 (defconst spacemacs-cache-directory
-  (concat user-emacs-directory ".cache/")
+  (concat spacemacs-data-directory ".cache/")
   "Spacemacs storage area for persistent files.")
 
 ;; ~/.emacs.d/.cache/auto-save
diff --git a/core/core-release-management.el b/core/core-release-management.el
index d89464c..d79c9ee 100644
--- a/core/core-release-management.el
+++ b/core/core-release-management.el
@@ -119,6 +119,10 @@ found."
          (not (spacemacs//can-check-for-new-version-at-startup)))
     (message (concat "Skipping check for new version "
                      "(reason: last check is too recent)")))
+   ((and (not force)
+         (or (string-prefix-p "/gnu/store" spacemacs-start-directory)
+             (string-prefix-p "/nix/store" spacemacs-start-directory)))
+    (message (concat "Skipping check for new version (reason: on guix or nix)")))
    ((require 'async nil t)
     (message "Start checking for new version...")
     (async-start
diff --git a/core/libs/quelpa.el b/core/libs/quelpa.el
index 918fab9..a30782e 100644
--- a/core/libs/quelpa.el
+++ b/core/libs/quelpa.el
@@ -87,7 +87,7 @@ The global value can be overridden for each package by supplying the
   :group 'quelpa
   :type 'hook)
 
-(defcustom quelpa-dir (expand-file-name "quelpa" user-emacs-directory)
+(defcustom quelpa-dir (expand-file-name "quelpa" spacemacs-data-directory)
   "Where quelpa builds and stores packages."
   :group 'quelpa
   :type 'string)
diff --git a/doc/QUICK_START.org b/doc/QUICK_START.org
index a0719bc..f91e3d8 100644
--- a/doc/QUICK_START.org
+++ b/doc/QUICK_START.org
@@ -109,7 +109,7 @@ then copied in the =init.el= file.
 The Emacs dotfile or dotdirectory is not replaced but rather
 complemented by the Spacemacs dotfile or dotdirectory. During startup,
 Emacs still uses =~/.emacs.d/init.el= (or =~/.emacs=) for its
-initialization, and variable =user-emacs-directory= will still point
+initialization, and variable =spacemacs-data-directory= will still point
 to =~/.emacs.d/=, even if =~/.spacemacs.d= or =~/.spacemacs= are
 present. Only now =~/.emacs.d/init.el= is provided by Spacemacs
 (e.g. after cloning the Spacemacs git repo into an empty
diff --git a/tests/core/core-configuration-layer-utest.el b/tests/core/core-configuration-layer-utest.el
index fc0848f..0384d93 100644
--- a/tests/core/core-configuration-layer-utest.el
+++ b/tests/core/core-configuration-layer-utest.el
@@ -995,16 +995,16 @@
 (ert-deftest test-make-layer--make-layer-from-symbol-with-a-dir ()
   (should (equal (cfgl-layer "layer"
                              :name 'layer
-                             :dir spacemacs-start-directory)
+                             :dir spacemacs-data-directory)
                  (configuration-layer/make-layer
-                  'layer nil nil spacemacs-start-directory))))
+                  'layer nil nil spacemacs-data-directory))))
 
 (ert-deftest test-make-layer--make-layer-from-spec-with-a-dir ()
   (should (equal (cfgl-layer "layer"
                              :name 'layer
-                             :dir spacemacs-start-directory)
+                             :dir spacemacs-data-directory)
                  (configuration-layer/make-layer
-                  '(layer :name 'layer) nil nil spacemacs-start-directory))))
+                  '(layer :name 'layer) nil nil spacemacs-data-directory))))
 
 (ert-deftest test-make-layer--cannot-make-layer-without-a-directory ()
   (mocker-let
@@ -1023,10 +1023,10 @@
 (ert-deftest test-make-layer--make-layer-without-a-dir-requires-an-initial-obj ()
   (let ((layer (cfgl-layer "layer"
                            :name 'layer
-                           :dir spacemacs-start-directory)))
+                           :dir spacemacs-data-directory)))
     (should (equal (cfgl-layer "layer"
                                :name 'layer
-                               :dir spacemacs-start-directory)
+                               :dir spacemacs-data-directory)
                    (configuration-layer/make-layer 'layer layer)))))
 
 ;; load packages
@@ -1034,7 +1034,7 @@
 (ert-deftest test-make-layer--make-used-layer-loads-packages-file ()
   (let ((layer (cfgl-layer "layer"
                            :name 'layer
-                           :dir spacemacs-start-directory))
+                           :dir spacemacs-data-directory))
         (layer-packages '(pkg1 pkg2 pkg3))
         (mocker-mock-default-record-cls 'mocker-stub-record))
     (mocker-let
@@ -1048,13 +1048,13 @@
                                 :variables nil
                                 :packages '(pkg1 pkg2 pkg3)
                                 :selected-packages 'all
-                                :dir spacemacs-start-directory)
+                                :dir spacemacs-data-directory)
                     (configuration-layer/make-layer 'layer layer 'used))))))
 
 (ert-deftest test-make-layer--make-layer-force-load-packages-file-with-var ()
   (let ((layer (cfgl-layer "layer"
                            :name 'layer
-                           :dir spacemacs-start-directory))
+                           :dir spacemacs-data-directory))
         (layer-packages '(pkg1 pkg2 pkg3))
         (configuration-layer--load-packages-files t)
         (mocker-mock-default-record-cls 'mocker-stub-record))
@@ -1068,13 +1068,13 @@
                                 :variables nil
                                 :packages '(pkg1 pkg2 pkg3)
                                 :selected-packages 'all
-                                :dir spacemacs-start-directory)
+                                :dir spacemacs-data-directory)
                     (configuration-layer/make-layer 'layer layer))))))
 
 (ert-deftest test-make-layer--make-layer-does-not-load-packages-file-by-default ()
   (let ((layer (cfgl-layer "layer"
                            :name 'layer
-                           :dir spacemacs-start-directory))
+                           :dir spacemacs-data-directory))
         (layer-packages '(pkg1))
         (mocker-mock-default-record-cls 'mocker-stub-record))
     (mocker-let
@@ -1086,7 +1086,7 @@
 (ert-deftest test-make-layer--make-used-layer-can-set-additional-properties ()
   (let ((layer (cfgl-layer "layer"
                            :name 'layer
-                           :dir spacemacs-start-directory))
+                           :dir spacemacs-data-directory))
         (layer-specs '(layer :disabled-for pkg8 pkg9
                              :can-shadow layer2 layer3
                              :variables foo bar toto 1))
@@ -1103,13 +1103,13 @@
                                 :variables '(foo bar toto 1)
                                 :packages '(pkg1 pkg2 pkg3)
                                 :selected-packages 'all
-                                :dir spacemacs-start-directory)
+                                :dir spacemacs-data-directory)
                     (configuration-layer/make-layer layer-specs layer 'used))))))
 
 (ert-deftest test-make-layer--make-not-used-layer-cannot-set-additional-properties ()
   (let ((layer (cfgl-layer "layer"
                            :name 'layer
-                           :dir spacemacs-start-directory))
+                           :dir spacemacs-data-directory))
         (layer-specs '(layer :disabled-for pkg8 pkg9
                              :can-shadow layer2
                              :variables foo bar toto 1))
@@ -1121,7 +1121,7 @@
                                :variables nil
                                :packages nil
                                :selected-packages 'all
-                               :dir spacemacs-start-directory)
+                               :dir spacemacs-data-directory)
                    (configuration-layer/make-layer layer-specs layer)))))
 
 (ert-deftest test-make-layer--make-used-layer-can-override-additional-properties ()
@@ -1130,7 +1130,7 @@
                            :disabled-for '(pkg10)
                            :can-shadow '()
                            :variables '(titi tata tutu 1)
-                           :dir spacemacs-start-directory))
+                           :dir spacemacs-data-directory))
         (layer-specs '(layer :disabled-for pkg8 pkg9
                              :can-shadow layer2
                              :variables foo bar toto 1))
@@ -1148,7 +1148,7 @@
                                 :variables '(foo bar toto 1)
                                 :packages '(pkg1 pkg2 pkg3)
                                 :selected-packages 'all
-                                :dir spacemacs-start-directory)
+                                :dir spacemacs-data-directory)
                     (configuration-layer/make-layer layer-specs layer 'used))))))
 
 (ert-deftest test-make-layer--make-not-used-layer-cannot-override-additional-properties ()
@@ -1159,7 +1159,7 @@
                            :variables '(titi tata tutu 1)
                            :packages '(pkg1 pkg2 pkg3)
                            :selected-packages 'all
-                           :dir spacemacs-start-directory))
+                           :dir spacemacs-data-directory))
         (layer-specs '(layer :disabled-for pkg8 pkg9
                              :can-shadow '(layer2)
                              :variables foo bar toto 1))
@@ -1171,7 +1171,7 @@
                                :variables '(titi tata tutu 1)
                                :packages '(pkg1 pkg2 pkg3)
                                :selected-packages 'all
-                               :dir spacemacs-start-directory)
+                               :dir spacemacs-data-directory)
                    (configuration-layer/make-layer layer-specs layer)))))
 
 ;; ---------------------------------------------------------------------------
diff --git a/tests/doc/org-export-ftest.el b/tests/doc/org-export-ftest.el
index c0d88f9..bde11c1 100644
--- a/tests/doc/org-export-ftest.el
+++ b/tests/doc/org-export-ftest.el
@@ -72,6 +72,6 @@
 ;; -----------------------------------------------------------------------------
 (ert-deftest test-spacemacs-html-export ()
   (unwind-protect (spacemacs/publish-doc)
-    (delete-directory (concat spacemacs-start-directory
+    (delete-directory (concat spacemacs-data-directory
                               "export/")
                       t)))
-- 
2.36.1

