The first time that a user runs spacemacs it will open the default
configuration from the source tree and modify the buffer. The buffer is
read-only since the file it opened is, but since we save the file to the users
home directory and not back to it's original location temporarily inhibiting
read-only solves our problem.

diff --git a/core/core-dotspacemacs.el b/core/core-dotspacemacs.el
index f28249148..3b7872ff0 100644
--- a/core/core-dotspacemacs.el
+++ b/core/core-dotspacemacs.el
@@ -643,19 +643,20 @@ If ARG is non nil then Ask questions to the user before installing the dotfile."
     (with-current-buffer (find-file-noselect
                           (concat dotspacemacs-template-directory
                                   ".spacemacs.template"))
-      (dolist (p preferences)
-        (goto-char (point-min))
-        (re-search-forward (car p))
-        (replace-match (cadr p)))
-      (let ((install
-             (if (file-exists-p dotspacemacs-filepath)
-                 (y-or-n-p
-                  (format "%s already exists. Do you want to overwrite it ? "
-                          dotspacemacs-filepath)) t)))
-        (when install
-          (write-file dotspacemacs-filepath)
-          (message "%s has been installed." dotspacemacs-filepath)
-          t))))
+      (let ((inhibit-read-only t))
+        (dolist (p preferences)
+          (goto-char (point-min))
+          (re-search-forward (car p))
+          (replace-match (cadr p)))
+        (let ((install
+               (if (file-exists-p dotspacemacs-filepath)
+                   (y-or-n-p
+                    (format "%s already exists. Do you want to overwrite it ? "
+                            dotspacemacs-filepath)) t)))
+          (when install
+            (write-file dotspacemacs-filepath)
+            (message "%s has been installed." dotspacemacs-filepath)
+            t)))))
   (dotspacemacs/load-file)
   ;; force new wizard values to be applied
   (dotspacemacs/init))
